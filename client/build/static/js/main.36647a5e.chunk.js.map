{"version":3,"sources":["context/currency_rate.js","components/DatePicker/index.js","api/invoice/index.js","components/Table/index.js","components/InvoicesTable/columns.js","components/InvoicesTable/index.js","components/Modals/CurrencyModal.js","components/ProductsTable/pdf.js","components/ProductsTable/index.js","context/show_noe.js","pages/invoices/index.js","components/SaleReportTable/columns.js","components/SaleReportTable/index.js","components/Cards/SaleReport/index.js","components/Cards/GroupSales/index.js","pages/ventas/index.js","components/ClientReportTable/columns.js","components/ClientReportTable/index.js","components/Cards/ClientReport/index.js","components/SearchInput/index.js","api/products/index.js","components/ProductSearch/index.js","components/ClientPerProduct/Table/columns.js","components/ClientPerProduct/Table/index.js","api/clients/index.js","components/ClientPerProduct/Card/index.js","components/ClientSearch/index.js","components/MonthlyAverageClient/Card/index.js","pages/clientes/index.js","components/Cards/CostFluctuation/index.js","components/GroupSearch/index.js","api/groups/index.js","components/PriceListTable/columns.js","components/PriceListTable/index.js","components/PDF/PriceList/index.js","components/Cards/GroupStock/index.js","hooks/useReportFilter.js","components/ProductCostPerGroup/Card/index.js","pages/productos/index.js","employees/Table/Sales/columns.js","employees/Table/Sales/EmployeesSalesTable.js","api/employees/index.js","employees/Search/EmployeeSearch.js","employees/Modal/Commission/CommissionModal.js","employees/Actions/index.js","pages/employees/index.js","App.js","api/currency_rates/index.js","index.js"],"names":["CurrencyRateContext","React","createContext","CurrencyRateProvider","_ref","children","currencyRate","setCurrencyRate","useState","_jsx","Provider","value","DatePicker","onSubmit","loading","submitDisabled","dateRange","setDateRange","from","DateTime","now","toISODate","to","_jsxs","className","type","onChange","event","target","Button","variant","onClick","disabled","role","BASE_URL","Table","data","columns","filterPlaceholder","onFilter","maxHeight","showFooter","onRowSelect","multiSelect","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","useTable","useRowSelect","onFilterDebounced","debounce","useEffect","selectedRows","filter","row","isSelected","map","original","_rows$find","find","MemoizedRow","memo","_ref2","getRowProps","e","lastSelectedRowIndex","Object","keys","selectedRowIds","length","newSelectedRowIndex","index","ctrlKey","shiftKey","toggleRowSelected","i","getToggleRowSelectedProps","cells","cell","title","getCellProps","style","background","color","render","placeholder","autoFocus","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","group","getFooterGroupProps","getFooterProps","Header","accessor","Cell","concat","toFixed","dayjs","format","InvoicesTable","memoizedColumns","useMemo","Card","Body","CurrencyModal","show","onClose","Modal","size","onHide","closeButton","Title","pdfschema","productList","quantityTotal","totalSummary","currency","content","text","local","toFormat","table","widths","body","product","quantity","total","bold","styles","header","alignment","margin","pageMargins","pageSize","pdfMake","vfs","pdfFonts","ProductsTable","useContext","showCurrencyModal","setShowCurrencyModal","reduce","acc","item","sortedData","sort","a","b","toLowerCase","localeCompare","Footer","console","log","async","productsData","Number","price","Cambio","pdfData","pdf","createPdf","open","ShowNoeContext","showNoe","setShowNoe","ShowNoesProvider","_JSON$parse","JSON","parse","localStorage","getItem","setItem","toString","InvoicesPage","setLoading","invoices","setInvoices","setSelectedRows","productsSummary","products","forEach","productId","values","invoicesTotalSummary","invoice","Container","fluid","preventDefault","response","fetch","json","fetchInvoiceList","current","toLocaleString","_ref3","rawProfit","_ref4","_ref5","netProfit","_ref6","SaleReportTable","SaleReportCard","sorting","setSorting","setSortedData","Array","isArray","sorted","marginRight","GroupSales","chartData","ResponsivePie","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","arcLabel","borderWidth","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","modifiers","tooltip","datum","label","VentasPage","setData","filtered_invoices_report","invoices_report","group_sales_chart","searchTerm","filteredData","f","includes","report","fetchInvoiceReport","group_sales_chart_data","id","categoria","sales_report","ClientReportTable","ClientReportCard","_Fragment","SearchInput","loadOptions","defaultOptions","cacheOptions","onSelect","AsyncSelect","inputValue","callback","loadingMessage","isClearable","fetchCostPerGroup","ProductSearch","filterParam","fetchProducts","record","product_name","Descripcion","key","handleSelect","option","action","ClientPerProductTable","ClientPerProductCard","selectedProduct","setSelectedProduct","fetchBestClientsPerProduct","IdProducto","then","display","flexDirection","gap","fromISO","flex","justifyContent","width","ClientSearch","clients","fetchClients","IdCliente","name","MonthlyAverageClient","selectedClient","setSelectedClient","clientId","fetchMonthlyAverage","ResponsiveLine","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","ClientesPage","filtered_best_clients","best_clients","client","fetchBestClients","MonthlyAverageClientCard","CostFluctuation","report_data","fetchCostFluctuation","fetch_product_report","axisLeft","legend","legendPosition","legendOffset","axisBottom","GroupSearch","groups","fetchGroups","groupId","PriceListTable","PriceListPDF","stock","GroupStock","selectedGroup","setSelectedGroup","setFilteredData","data_to_filter","initial_state","arguments","undefined","filterValue","filterKey","nestedKey","nestedFilter","filtered","r","useReportFilter","inputRef","useRef","fetch_stock_by_group","fetchProductPriceList","ref","fetchProductsByGroup","div","document","createElement","doc","jsPDF","pdfName","Date","toISOString","replaceAll","setProperties","setFontSize","align","innerHTML","renderToStaticMarkup","autoTable","html","firstChild","cellPadding","didParseCell","section","raw","nodeName","fillColor","cellWidth","addPage","save","ProductCostPerGroupCard","group_name","total_cost","valueFormat","ProductosPage","CostFluctuationCard","ProductCostPerGroup","setZone","invoiceTotal","commissionTotal","EmployeeSalesTable","EmployeeSearch","employees","getAllEmployees","CommissionModal","employee","commissionInfo","setCommissionInfo","formData","setFormData","submissionState","setSubmissionState","error","message","employeeId","catch","getComisionInfo","res","method","stringify","updateComisionInfo","sanitizedFormData","success","Alert","Spinner","animation","info","step","commission","onFocus","select","EmployeeActions","onDateSubmit","employeeSalesLoading","setEmployeeSalesLoading","selectedEmployee","setSelectedEmployee","showCommissionModal","setShowCommissionModal","submitDateHandler","getEmployeeSales","EmployeesPage","employeeSales","setEmployeeSales","sales","App","location","useLocation","status","fetchCurrencyRates","Simbolo","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","route","Link","pathname","textTransform","alignItems","checked","Switch","Route","path","component","ReactDOM","StrictMode","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.36647a5e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const CurrencyRateContext = React.createContext();\r\n\r\nexport const CurrencyRateProvider = ({ children }) => {\r\n  const [currencyRate, setCurrencyRate] = useState(0);\r\n\r\n  return (\r\n    <CurrencyRateContext.Provider value={{ currencyRate, setCurrencyRate }}>{children}</CurrencyRateContext.Provider>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst DatePicker = ({ onSubmit, loading, submitDisabled }) => {\r\n  const [dateRange, setDateRange] = useState({\r\n    from: DateTime.now().toISODate(),\r\n    to: DateTime.now().toISODate(),\r\n  });\r\n\r\n  return (\r\n    <div className='d-flex flex-column flex-sm-row justify-content-center mb-3 gap-2'>\r\n      <div className='d-flex flex-row justify-content-center align-items-center gap-2 text-light'>\r\n        <label className='d-none d-sm-flex'>Desde:</label>\r\n        <input\r\n          type='date'\r\n          value={dateRange.from}\r\n          onChange={(event) => setDateRange({ ...dateRange, from: event.target.value })}\r\n        />\r\n        <label className='d-none d-sm-flex'>Hasta:</label>\r\n        <input\r\n          type='date'\r\n          value={dateRange.to}\r\n          onChange={(event) => setDateRange({ ...dateRange, to: event.target.value })}\r\n        />\r\n      </div>\r\n      <Button variant='primary' onClick={(event) => onSubmit(event, dateRange)} disabled={loading || submitDisabled}>\r\n        {loading && (\r\n          <div>\r\n            <span className='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span>\r\n            <span className='visually-hidden'>Loading...</span>\r\n          </div>\r\n        )}\r\n        {!loading && <span className='mr-2'>Enviar</span>}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","const BASE_URL = '/api/invoices';\r\n\r\nexport const fetchInvoiceReport = async ({ from, to }, showNoe) => {\r\n  const response = await fetch(`${BASE_URL}/sales?from=${from}&to=${to}&showNoe=${showNoe}`);\r\n  const report = await response.json();\r\n  console.log('From fetchInvoiceReport: ', report);\r\n  return report;\r\n};\r\n\r\nexport const fetchInvoiceList = async ({ from, to }, showNoe) => {\r\n  const response = await fetch(`${BASE_URL}?from=${from}&to=${to}&showNoe=${showNoe}`);\r\n  const invoices = await response.json();\r\n  return invoices;\r\n};\r\n","import { useEffect } from 'react';\r\nimport React from 'react';\r\nimport { useTable, useRowSelect } from 'react-table';\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst Table = ({\r\n  data = [],\r\n  loading,\r\n  columns = [],\r\n  filterPlaceholder,\r\n  onFilter,\r\n  maxHeight = 350,\r\n  showFooter = false,\r\n  onRowSelect,\r\n  multiSelect = false,\r\n}) => {\r\n  const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow, state } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useRowSelect\r\n  );\r\n\r\n  const onFilterDebounced = debounce((value) => {\r\n    onFilter(value);\r\n  }, 500);\r\n\r\n  useEffect(() => {\r\n    if (multiSelect) {\r\n      const selectedRows = rows.filter((row) => row.isSelected);\r\n      onRowSelect(selectedRows.map((row) => row.original));\r\n    } else {\r\n      onRowSelect && onRowSelect(rows.find((row) => row.isSelected)?.original);\r\n    }\r\n  }, [state, multiSelect, onRowSelect]);\r\n\r\n  const MemoizedRow = React.memo(\r\n    ({ row }) => {\r\n      return (\r\n        <tr\r\n          {...row.getRowProps({\r\n            onClick: onRowSelect\r\n              ? (e) => {\r\n                  const lastSelectedRowIndex = Object.keys(state.selectedRowIds)[\r\n                    Object.keys(state.selectedRowIds).length - 1\r\n                  ];\r\n                  const newSelectedRowIndex = row.index;\r\n\r\n                  if (e.ctrlKey && !e.shiftKey) {\r\n                    row.toggleRowSelected();\r\n                  } else if (e.shiftKey && !e.ctrlKey) {\r\n                    if (multiSelect) {\r\n                      if (newSelectedRowIndex >= lastSelectedRowIndex) {\r\n                        for (let i = lastSelectedRowIndex; i <= newSelectedRowIndex; i++) {\r\n                          if (i !== lastSelectedRowIndex) {\r\n                            rows[i].toggleRowSelected();\r\n                          }\r\n                        }\r\n                      } else {\r\n                        for (let i = lastSelectedRowIndex; i >= newSelectedRowIndex; i--) {\r\n                          if (i !== lastSelectedRowIndex) {\r\n                            rows[i].toggleRowSelected();\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  } else {\r\n                    if (row.isSelected) {\r\n                      row.toggleRowSelected();\r\n                    } else {\r\n                      state.selectedRowIds = {};\r\n                      row.toggleRowSelected();\r\n                    }\r\n                  }\r\n                }\r\n              : null,\r\n          })}\r\n          {...row.getToggleRowSelectedProps({})}\r\n        >\r\n          {row.cells.map((cell, index) => {\r\n            return (\r\n              <td\r\n                title={cell.value}\r\n                {...cell.getCellProps()}\r\n                style={{\r\n                  background: row.isSelected ? 'lightblue' : 'white',\r\n                  color: row.isSelected ? 'white' : 'black',\r\n                }}\r\n              >\r\n                {cell.render('Cell')}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    },\r\n    [data]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {onFilter && (\r\n        <div className='table-filter-container'>\r\n          <input\r\n            className='table-filter-input'\r\n            onChange={(event) => onFilterDebounced(event.target.value)}\r\n            placeholder={filterPlaceholder}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='table-container' style={{ maxHeight }}>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return <MemoizedRow row={row} />;\r\n            })}\r\n          </tbody>\r\n          {showFooter && data.length > 0 && (\r\n            <tfoot>\r\n              {footerGroups.map((group) => (\r\n                <tr {...group.getFooterGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tfoot>\r\n          )}\r\n        </table>\r\n        {loading && (\r\n          <div className='position-absolute top-50 start-50 translate-middle'>\r\n            <span className='spinner-border spinner-border-md' role='status' aria-hidden='true' />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import dayjs from 'dayjs';\r\n\r\nconst columns = [\r\n  {\r\n    Header: 'ID',\r\n    accessor: 'invoiceId',\r\n  },\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'RIF',\r\n    accessor: 'rif',\r\n  },\r\n  {\r\n    Header: 'TOTAL',\r\n    accessor: 'total',\r\n    Cell: ({ value }) => `$${value ? value.toFixed(2) : ''}`,\r\n  },\r\n  {\r\n    Header: 'Fecha',\r\n    accessor: 'createdAt',\r\n    Cell: ({ value }) => {\r\n      return dayjs(value).format('MMM DD, YYYY');\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import Table from 'components/Table';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useMemo } from 'react';\r\nimport columns from './columns';\r\n\r\nconst InvoicesTable = ({ data, loading, onRowSelect }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return (\r\n    <Card className='noselect'>\r\n      <Card.Header>\r\n        <h3>Facturas</h3>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Table data={data} columns={memoizedColumns} loading={loading} onRowSelect={onRowSelect} multiSelect />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InvoicesTable;\r\n","import { Modal, Button } from 'react-bootstrap';\r\n\r\nfunction CurrencyModal({ show, onClose, onSubmit }) {\r\n  return (\r\n    <Modal show={show} size='sm' onHide={onClose}>\r\n      <Modal.Header closeButton onHide={onClose}>\r\n        <Modal.Title>Moneda</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Button className='w-100 mb-3' onClick={() => onSubmit('USD')}>\r\n          USD\r\n        </Button>\r\n        <Button className='w-100' onClick={() => onSubmit('Bs')}>\r\n          Bs\r\n        </Button>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CurrencyModal;\r\n","import { DateTime } from 'luxon';\r\n\r\nconst pdfschema = (productList, quantityTotal, totalSummary, currency) => ({\r\n  content: [\r\n    { text: 'ALIMENTOS DM MARKET, C.A.', style: 'header' },\r\n    {\r\n      text: 'CALLE ILUSTRES PROCERES LOCAL NRO S/N SECTOR CENTRO ALTAGRACIA DE ORITUCO DE ORITUCO ZONA POSTAL 2320.',\r\n      style: 'header',\r\n    },\r\n    { text: 'R.I.F.: J-41270446-0', style: 'header' },\r\n    { text: DateTime.local().toFormat('dd/MM/yyyy'), style: 'header' },\r\n    {\r\n      style: 'table',\r\n      table: {\r\n        widths: [85, '*', 'auto', 'auto'],\r\n        body: [\r\n          ['CATEGORÍA', 'PRODUCTO', 'CANTIDAD', `TOTAL (${currency})`],\r\n          ...productList.map(({ group, product, quantity, total }) => [group, product, quantity, total]),\r\n          ['', '', { text: quantityTotal, bold: true }, { text: `${currency} ${totalSummary}`, bold: true }],\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  styles: {\r\n    header: {\r\n      alignment: 'center',\r\n    },\r\n    table: {\r\n      margin: [0, 20, 0, 0],\r\n    },\r\n  },\r\n\r\n  pageMargins: 40,\r\n  pageSize: 'LETTER',\r\n});\r\n\r\nexport default pdfschema;\r\n","import { useMemo, useContext, useState } from 'react';\r\nimport { CurrencyRateContext } from '../../context/currency_rate';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport Table from 'components/Table';\r\nimport CurrencyModal from 'components/Modals/CurrencyModal';\r\nimport pdf from './pdf';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst ProductsTable = ({ data, totalSummary }) => {\r\n  const { currencyRate } = useContext(CurrencyRateContext);\r\n\r\n  const [showCurrencyModal, setShowCurrencyModal] = useState(false);\r\n\r\n  const quantityTotal = useMemo(() => {\r\n    if (!data) return 0;\r\n\r\n    return data.reduce((acc, item) => {\r\n      return acc + item.quantity;\r\n    }, 0);\r\n  }, [data]);\r\n\r\n  const sortedData = useMemo(() => {\r\n    if (!data) return [];\r\n\r\n    return data.sort((a, b) => {\r\n      return (\r\n        a.group.toLowerCase().localeCompare(b.group.toLowerCase()) ||\r\n        a.product.toLowerCase().localeCompare(b.product.toLowerCase())\r\n      );\r\n    });\r\n  }, [data]);\r\n\r\n  const memoizedColumns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Categoría',\r\n        accessor: 'group',\r\n      },\r\n      {\r\n        Header: 'ID',\r\n        accessor: 'productId',\r\n      },\r\n      {\r\n        Header: 'Producto',\r\n        accessor: 'product',\r\n      },\r\n      {\r\n        Header: 'Cantidad',\r\n        accessor: 'quantity',\r\n        Footer: () => {\r\n          return <span>{quantityTotal ? quantityTotal.toFixed(2) : ''}</span>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Total',\r\n        accessor: 'total',\r\n        Footer: () => {\r\n          return <span>${totalSummary ? totalSummary.toFixed(2) : ''}</span>;\r\n        },\r\n      },\r\n    ],\r\n    [totalSummary, quantityTotal]\r\n  );\r\n\r\n  console.log(sortedData);\r\n\r\n  const exportToPDF = () => {\r\n    const pdfData = pdf(sortedData, quantityTotal, totalSummary);\r\n\r\n    pdfMake.createPdf(pdfData).open();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <div className='d-flex w-100 justify-content-between'>\r\n          <h3>Productos</h3>\r\n          <Button onClick={() => setShowCurrencyModal(true)}>Imprimir</Button>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Table data={sortedData} columns={memoizedColumns} showFooter />\r\n      </Card.Body>\r\n      {showCurrencyModal && (\r\n        <CurrencyModal\r\n          show={showCurrencyModal}\r\n          onClose={() => setShowCurrencyModal(false)}\r\n          onSubmit={async (currency) => {\r\n            let productsData = sortedData;\r\n\r\n            if (currency === 'Bs') {\r\n              productsData = productsData.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  total: Number(item.price * item.quantity * currencyRate?.Cambio).toFixed(2),\r\n                };\r\n              });\r\n            }\r\n\r\n            const pdfData = pdf(productsData, quantityTotal, totalSummary, currency);\r\n\r\n            pdfMake.createPdf(pdfData).open();\r\n          }}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductsTable;\r\n","import React, { createContext, useEffect, useState } from 'react';\r\n\r\n// Crea el contexto con un valor inicial\r\nexport const ShowNoeContext = createContext({\r\n  showNoe: false,\r\n  setShowNoe: () => {},\r\n});\r\n\r\nexport const ShowNoesProvider = ({ children }) => {\r\n  const [showNoe, setShowNoe] = useState(JSON.parse(localStorage.getItem('showNoe')) ?? false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('showNoe', showNoe.toString());\r\n  }, [showNoe]);\r\n\r\n  return <ShowNoeContext.Provider value={{ showNoe, setShowNoe }}>{children}</ShowNoeContext.Provider>;\r\n};\r\n","import { useState, useMemo, useContext } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { fetchInvoiceList } from '../../api/invoice';\r\nimport InvoicesTable from 'components/InvoicesTable';\r\nimport ProductsTable from 'components/ProductsTable';\r\nimport { ShowNoeContext } from 'context/show_noe';\r\n\r\nconst InvoicesPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const { showNoe } = useContext(ShowNoeContext);\r\n\r\n  const productsSummary = useMemo(() => {\r\n    if (!selectedRows || selectedRows.length === 0) return [];\r\n\r\n    const products = {};\r\n\r\n    selectedRows.forEach((row) => {\r\n      row.products.forEach((product) => {\r\n        if (!products[product.productId]) {\r\n          products[product.productId] = {\r\n            ...product,\r\n            quantity: 0,\r\n          };\r\n        }\r\n\r\n        products[product.productId].quantity += product.quantity;\r\n        products[product.productId].total = products[product.productId].quantity * products[product.productId].price;\r\n        products[product.productId].total = products[product.productId].total.toFixed(2);\r\n      });\r\n    });\r\n    //convert products to an array\r\n    return Object.values(products);\r\n  }, [selectedRows]);\r\n\r\n  const invoicesTotalSummary = useMemo(() => {\r\n    if (!selectedRows || selectedRows.length === 0) return 0;\r\n\r\n    return selectedRows.reduce((total, invoice) => total + invoice?.total, 0);\r\n  }, [selectedRows]);\r\n\r\n  const onSubmit = async (event, dateRange) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    const response = await fetchInvoiceList(dateRange, showNoe);\r\n    setInvoices(response);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <DatePicker onSubmit={onSubmit} loading={loading} />\r\n      <div className='d-flex flex-column flex-xl-row justify-content-center gap-3'>\r\n        <div className='col-12 col-xl-6'>\r\n          <InvoicesTable data={invoices} loading={loading} onRowSelect={setSelectedRows} />\r\n        </div>\r\n        <div className='col-12 col-xl-6'>\r\n          <ProductsTable data={productsSummary} loading={loading} totalSummary={invoicesTotalSummary} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvoicesPage;\r\n","const columns = [\r\n  {\r\n    Header: \"Producto\",\r\n    accessor: \"product\",\r\n  },\r\n  {\r\n    Header: \"Cantidad\",\r\n    accessor: \"quantity\",\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.quantity;\r\n      }, 0);\r\n      return Number(total).toFixed(2);\r\n    },\r\n  },\r\n  {\r\n    Header: \"Bruto\",\r\n    accessor: \"rawProfit\",\r\n    Cell: ({ value }) => {\r\n      return value ? \"$\" + value.toLocaleString() : \"\";\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.rawProfit;\r\n      }, 0);\r\n      return \"$\" + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n  {\r\n    Header: \"Utilidad\",\r\n    accessor: \"netProfit\",\r\n    Cell: ({ value }) => {\r\n      return value ? \"$\" + value.toLocaleString() : \"\";\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.netProfit;\r\n      }, 0);\r\n      return \"$\" + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n  {\r\n    Header: \"Promedio\",\r\n    accessor: \"averageProfitPercent\",\r\n    Cell: ({ value }) => {\r\n      return value + \"%\";\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport columns from './columns';\r\n\r\nconst SaleReportTable = ({ data, loading }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return <Table data={data} columns={memoizedColumns} showFooter loading={loading} />;\r\n};\r\n\r\nexport default SaleReportTable;\r\n","import { useEffect, useState } from 'react';\r\nimport SaleReportTable from 'components/SaleReportTable';\r\n\r\nconst SaleReportCard = ({ data = [], onFilter, loading }) => {\r\n  const [sorting, setSorting] = useState('rawProfit');\r\n  const [sortedData, setSortedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(data)) {\r\n      const sorted = data.sort((a, b) => {\r\n        return b[sorting] - a[sorting];\r\n      });\r\n      setSortedData([...sorted]);\r\n    }\r\n  }, [sorting, data]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Ventas</h3>\r\n        <div>\r\n          <label style={{ marginRight: '5px' }}>Ordenar:</label>\r\n          <select onChange={(event) => setSorting(event.target.value)} value={sorting}>\r\n            <option value='quantity'>Cantidad</option>\r\n            <option value='rawProfit'>Bruto</option>\r\n            <option value='netProfit'>Utilidad</option>\r\n            <option value='averageProfitPercent'>Promedio</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='card-body'>\r\n        <input\r\n          className='input-filter'\r\n          placeholder='Buscar...'\r\n          type='search'\r\n          onChange={(event) => onFilter(event.target.value)}\r\n        />\r\n        <SaleReportTable data={sortedData} loading={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleReportCard;\r\n","import { ResponsivePie } from '@nivo/pie';\r\n\r\nconst GroupSales = ({ chartData = [], loading }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Gráfico de categorías</h3>\r\n      </div>\r\n      <div className='card-body'>\r\n        {chartData.length > 0 && (\r\n          <ResponsivePie\r\n            data={chartData}\r\n            margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\r\n            innerRadius={0.5}\r\n            padAngle={0.7}\r\n            cornerRadius={3}\r\n            activeOuterRadiusOffset={8}\r\n            arcLabel={function (e) {\r\n              return `${e.value} (${e.data.netProfit})`;\r\n            }}\r\n            borderWidth={1}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLinkLabelsTextColor='#333333'\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: 'color' }}\r\n            arcLabelsSkipAngle={10}\r\n            arcLabelsTextColor={{\r\n              from: 'color',\r\n              modifiers: [['darker', 2]],\r\n            }}\r\n            tooltip={({ datum }) => {\r\n              return (\r\n                <div className='tooltip-container'>\r\n                  <span className='small-square' style={{ background: datum.color }}></span>\r\n                  <strong>{datum.label}</strong>\r\n                  <label>Bruto: </label>\r\n                  <span>${Number(datum.value).toLocaleString()}</span>\r\n                  <label>Utilidad: </label>\r\n                  <span>${Number(datum.data.netProfit).toLocaleString()}</span>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n        {loading && (\r\n          <div className='position-absolute top-50 start-50 translate-middle'>\r\n            <span className='spinner-border spinner-border-md' role='status' aria-hidden='true' />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupSales;\r\n","import { useContext, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport SaleReportCard from 'components/Cards/SaleReport';\r\nimport GroupSales from 'components/Cards/GroupSales';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { fetchInvoiceReport } from 'api/invoice';\r\nimport debounce from 'lodash.debounce';\r\nimport { ShowNoeContext } from 'context/show_noe';\r\n\r\nconst VentasPage = () => {\r\n  const [data, setData] = useState({\r\n    filtered_invoices_report: [],\r\n    invoices_report: [],\r\n    group_sales_chart: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { showNoe } = useContext(ShowNoeContext);\r\n\r\n  const onFilter = debounce((searchTerm) => {\r\n    const filteredData = data.invoices_report.filter((f) => f.product.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setData({ ...data, filtered_invoices_report: filteredData });\r\n  }, 500);\r\n\r\n  const onSubmit = async (event, dateRange) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n    const response = await fetchInvoiceReport(dateRange, showNoe);\r\n    const chartData = response.group_sales_chart_data.reduce(\r\n      (acc, current) => [\r\n        ...acc,\r\n        {\r\n          id: current.categoria,\r\n          label: current.categoria,\r\n          value: current.rawProfit,\r\n          netProfit: current.netProfit,\r\n        },\r\n      ],\r\n      []\r\n    );\r\n    setData({ ...data, invoices_report: response.sales_report, group_sales_chart: chartData });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <DatePicker onSubmit={onSubmit} loading={loading} />\r\n      <div className='d-flex flex-column flex-xl-row justify-content-center gap-3'>\r\n        <div className='col-12 col-xl-6'>\r\n          <SaleReportCard\r\n            data={data.filtered_invoices_report.length > 0 ? data.filtered_invoices_report : data.invoices_report}\r\n            onFilter={onFilter}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n        <div className='col-12 col-xl-6'>\r\n          <GroupSales chartData={data.group_sales_chart} loading={loading} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VentasPage;\r\n","const columns = [\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'total_USD',\r\n    Cell: ({ value }) => {\r\n      return '$' + value.toLocaleString();\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst ClientReportTable = ({ data, loading }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return <Table data={data} columns={memoizedColumns} loading={loading} />;\r\n};\r\n\r\nexport default ClientReportTable;\r\n","import ClientReportTable from 'components/ClientReportTable';\r\n\r\nconst ClientReportCard = ({ loading, data = [], onFilter }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Mejores clientes</h3>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'client', 'client_report')}\r\n            />\r\n            <ClientReportTable data={data} loading={loading} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientReportCard;\r\n","import AsyncSelect from 'react-select/async';\r\nimport debounce from 'debounce-promise';\r\n\r\nconst SearchInput = ({ placeholder, loadOptions, defaultOptions = true, cacheOptions = true, onSelect }) => {\r\n  return (\r\n    <AsyncSelect\r\n      loadOptions={debounce((inputValue, callback) => loadOptions(inputValue, callback), 700)}\r\n      cacheOptions={cacheOptions}\r\n      defaultOptions={defaultOptions}\r\n      placeholder={placeholder}\r\n      onChange={onSelect ? onSelect : null}\r\n      loadingMessage={() => {\r\n        return 'Cargando...';\r\n      }}\r\n      isClearable\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const BASE_URL = \"/api/products\";\r\nconst REPORTS_BASE_URL = \"/api/reports/products\";\r\n\r\nexport const fetchProducts = async ({ filter }) => {\r\n  const filterParam = filter ? `?filter=${filter}` : \"\";\r\n  const response = await fetch(BASE_URL + filterParam);\r\n  const products = await response.json();\r\n  return products;\r\n};\r\n\r\nexport const fetchCostFluctuation = async (productId) => {\r\n  const response = await fetch(`${BASE_URL}/cost-fluctuation/${productId}`);\r\n  const report = await response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchCostPerGroup = async () => {\r\n  const response = await fetch(`${BASE_URL}/cost/group`);\r\n  const report = await response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchProductsByGroup = async () => {\r\n  const response = await fetch(`${BASE_URL}/group`);\r\n  const products = await response.json();\r\n  return products;\r\n};\r\n\r\nexport const fetchProductPriceList = async (groupId) => {\r\n  const response = await fetch(`${BASE_URL}/price-list/${groupId}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchProductReports = async (productId) => {\r\n  const response = await fetch(`${REPORTS_BASE_URL}/cost-fluctuation/${productId}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchBestClients = async (productId, dateRange) => {\r\n  const response = await fetch(\r\n    `${REPORTS_BASE_URL}/best-clients/${productId}?from=${dateRange.from}&to=${dateRange.to}`\r\n  );\r\n  const report = response.json();\r\n  return report;\r\n};\r\n","import SearchInput from 'components/SearchInput';\r\nimport { fetchProducts } from 'api/products';\r\n\r\nconst ProductSearch = ({ onSelect }) => {\r\n    const loadProductVariants = async (inputValue) => {\r\n        let products = await fetchProducts({ filter: inputValue });\r\n\r\n        if (products && products.length > 0) {\r\n            const records = products.map((record) => {\r\n                let product_name = record.Descripcion;\r\n\r\n                const product = {\r\n                    key: record.id,\r\n                    label: product_name,\r\n                    value: record,\r\n                };\r\n                return product;\r\n            });\r\n\r\n            return records;\r\n        }\r\n    };\r\n\r\n    const handleSelect = (option, { action }) => {\r\n        if (action === 'select-option') {\r\n            onSelect(option.value, action);\r\n        } else if (action === 'clear') {\r\n            onSelect(null, action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchInput\r\n            loadOptions={loadProductVariants}\r\n            defaultOptions={false}\r\n            placeholder='Buscar producto...'\r\n            onSelect={handleSelect}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductSearch;\r\n","const columns = [\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'Cantidad',\r\n    accessor: 'quantity_total',\r\n  },\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'total_USD',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n  },\r\n  {\r\n    Header: 'Utilidad',\r\n    accessor: 'utilidad',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : 0;\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport columns from './columns';\r\n\r\nconst ClientPerProductTable = ({ data, loading }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return <Table data={data} columns={memoizedColumns} loading={loading} />;\r\n};\r\n\r\nexport default ClientPerProductTable;\r\n","const BASE_URL = '/api/clients';\r\n\r\nexport const fetchClients = async ({ filter }) => {\r\n  const filterParam = filter ? `?filter=${filter}` : '';\r\n  const response = await fetch(`${BASE_URL}${filterParam}`);\r\n  const clients = response.json();\r\n  return clients;\r\n};\r\nexport const fetchBestClients = async (dateRange, showNoe) => {\r\n  const response = await fetch(`${BASE_URL}/best/?from=${dateRange.from}&to=${dateRange.to}&showNoe=${showNoe}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchBestClientsPerProduct = async (productId, dateRange, showNoe) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/best/product/${productId}?from=${dateRange.from}&to=${dateRange.to}&showNoe=${showNoe}`\r\n  );\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchMonthlyAverage = async (clientId, showNoe) => {\r\n  const response = await fetch(`${BASE_URL}/average/month/${clientId}?showNoe=${showNoe}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport ProductSearch from 'components/ProductSearch';\r\nimport ClientPerProductTable from 'components/ClientPerProduct/Table';\r\nimport { fetchBestClientsPerProduct } from 'api/clients';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst ClientPerProductCard = ({ dateRange }) => {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct && dateRange.from && dateRange.to) {\r\n      setLoading(true);\r\n      fetchBestClientsPerProduct(selectedProduct.IdProducto, dateRange).then((response) => {\r\n        setData([...response]);\r\n        setLoading(false);\r\n      });\r\n    } else if (!selectedProduct) {\r\n      setData([]);\r\n    }\r\n  }, [selectedProduct, dateRange]);\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Cliente por producto</h3>\r\n        <div style={{ display: 'flex', flexDirection: 'row', gap: '5px' }}>\r\n          <small>Desde: </small>\r\n          <small>{DateTime.fromISO(dateRange.from).toLocaleString()} </small>\r\n          <small>Hasta: </small>\r\n          <small>{DateTime.fromISO(dateRange.to).toLocaleString()} </small>\r\n        </div>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flex: '1',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <div style={{ width: '100%' }}>\r\n            <ProductSearch onSelect={setSelectedProduct} />\r\n          </div>\r\n        </div>\r\n        <ClientPerProductTable data={data} loading={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPerProductCard;\r\n","import SearchInput from 'components/SearchInput';\r\nimport { fetchClients } from 'api/clients';\r\n\r\nconst ClientSearch = ({ onSelect }) => {\r\n    const loadClients = async (inputValue) => {\r\n        let clients = await fetchClients({ filter: inputValue });\r\n\r\n        if (clients && clients.length > 0) {\r\n            const records = clients.map((record) => {\r\n                const client = {\r\n                    key: record.IdCliente,\r\n                    label: record.name,\r\n                    value: record,\r\n                };\r\n                return client;\r\n            });\r\n\r\n            return records;\r\n        }\r\n    };\r\n\r\n    const handleSelect = (option, { action }) => {\r\n        if (action === 'select-option') {\r\n            onSelect && onSelect(option.value, action);\r\n        } else if (action === 'clear') {\r\n            onSelect && onSelect(null, action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchInput\r\n            loadOptions={loadClients}\r\n            defaultOptions={false}\r\n            placeholder='Buscar cliente...'\r\n            onSelect={handleSelect}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ClientSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchMonthlyAverage } from 'api/clients';\r\nimport ClientSearch from 'components/ClientSearch';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\nconst MonthlyAverageClient = () => {\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient) {\r\n      setLoading(true);\r\n      fetchMonthlyAverage(selectedClient.IdCliente).then((response) => {\r\n        console.log(response);\r\n        if (Object.keys(response).length > 0) {\r\n          setData([response]);\r\n        }\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [selectedClient]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Promedio mensual</h3>\r\n      </div>\r\n      <div className='card-body'>\r\n        <ClientSearch onSelect={setSelectedClient} />\r\n        {data && (\r\n          <ResponsiveLine\r\n            data={data}\r\n            margin={{ top: 20, right: 30, bottom: 80, left: 40 }}\r\n            xScale={{ type: 'point' }}\r\n            yScale={{\r\n              type: 'linear',\r\n              min: 'auto',\r\n              max: 'auto',\r\n              stacked: true,\r\n              reverse: false,\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            pointSize={10}\r\n            pointColor={{ theme: 'background' }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: 'serieColor' }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n          />\r\n        )}\r\n        {loading && (\r\n          <div className='position-absolute top-50 start-50 translate-middle'>\r\n            <span className='spinner-border spinner-border-md' role='status' aria-hidden='true' />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyAverageClient;\r\n","import { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ClientReportCard from 'components/Cards/ClientReport';\r\nimport ClientPerProductCard from 'components/ClientPerProduct/Card';\r\nimport MonthlyAverageClientCard from 'components/MonthlyAverageClient/Card';\r\nimport DatePicker from 'components/DatePicker';\r\nimport { fetchBestClients } from 'api/clients';\r\nimport { DateTime } from 'luxon';\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst ClientesPage = () => {\r\n  const [data, setData] = useState({\r\n    filtered_best_clients: [],\r\n    best_clients: [],\r\n    group_sales_chart: [],\r\n  });\r\n  const [dateRange, setDateRange] = useState({\r\n    from: DateTime.now().toISODate(),\r\n    to: DateTime.now().toISODate(),\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFilter = debounce((searchTerm) => {\r\n    const filteredData = data.best_clients.filter((f) => f.client.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setData({ ...data, filtered_best_clients: filteredData });\r\n  }, 500);\r\n\r\n  const onSubmit = async (event, dateRange) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n    const response = await fetchBestClients(dateRange);\r\n    setDateRange(dateRange);\r\n    setData({ ...data, best_clients: response });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <DatePicker onSubmit={onSubmit} loading={loading} />\r\n      <div className='d-flex flex-column flex-xl-row justify-content-center gap-3'>\r\n        <div className='col-12 col-xl-4'>\r\n          <ClientReportCard\r\n            data={data.filtered_best_clients.length > 0 ? data.filtered_best_clients : data.best_clients}\r\n            onFilter={onFilter}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n        <div className='col-12 col-xl-4'>\r\n          <ClientPerProductCard dateRange={dateRange} />\r\n        </div>\r\n        <div className='col-12 col-xl-4'>\r\n          <MonthlyAverageClientCard />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientesPage;\r\n","import { useState, useEffect } from 'react';\r\nimport ProductSearch from 'components/ProductSearch';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { fetchCostFluctuation } from 'api/products';\r\n\r\nconst CostFluctuation = () => {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct) {\r\n      const fetch_product_report = async () => {\r\n        setLoading(true);\r\n        const report_data = await fetchCostFluctuation(selectedProduct.IdProducto);\r\n        if (Object.keys(report_data).length > 0) {\r\n          setData([report_data]);\r\n        }\r\n        setLoading(false);\r\n      };\r\n\r\n      fetch_product_report();\r\n    } else if (!selectedProduct) {\r\n      setData([]);\r\n    }\r\n  }, [selectedProduct]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Promedio mensual costo</h3>\r\n      </div>\r\n      <div className='card-body'>\r\n        <ProductSearch onSelect={setSelectedProduct} />\r\n        <ResponsiveLine\r\n          data={data}\r\n          margin={{ top: 20, right: 30, bottom: 80, left: 40 }}\r\n          xScale={{ type: 'point' }}\r\n          yScale={{\r\n            type: 'linear',\r\n            min: 'auto',\r\n            max: 'auto',\r\n            stacked: true,\r\n            reverse: false,\r\n          }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisLeft={{\r\n            legend: 'Precio',\r\n            legendPosition: 'middle',\r\n            legendOffset: -30,\r\n          }}\r\n          axisBottom={{\r\n            legend: 'Meses',\r\n            legendPosition: 'middle',\r\n            legendOffset: 30,\r\n          }}\r\n          pointSize={10}\r\n          pointColor={{ theme: 'background' }}\r\n          pointBorderWidth={2}\r\n          pointBorderColor={{ from: 'serieColor' }}\r\n          pointLabelYOffset={-12}\r\n          useMesh={true}\r\n        />\r\n      </div>\r\n      {loading && (\r\n        <div className='position-absolute top-50 start-50 translate-middle'>\r\n          <span className='spinner-border spinner-border-md' role='status' aria-hidden='true' />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CostFluctuation;\r\n","import SearchInput from 'components/SearchInput';\r\nimport { fetchGroups } from 'api/groups';\r\nimport { useContext } from 'react';\r\nimport { ShowNoeContext } from 'context/show_noe';\r\n\r\nconst GroupSearch = ({ onSelect }) => {\r\n  const { showNoe } = useContext(ShowNoeContext);\r\n\r\n  const loadGroups = async (inputValue) => {\r\n    let groups = await fetchGroups({ filter: inputValue, showNoe });\r\n\r\n    if (groups && groups.length > 0) {\r\n      const records = groups.map((record) => {\r\n        const group = {\r\n          key: record.groupId,\r\n          label: record.name,\r\n          value: record,\r\n        };\r\n        return group;\r\n      });\r\n\r\n      return records;\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option, { action }) => {\r\n    if (action === 'select-option') {\r\n      onSelect(option.value, action);\r\n    } else if (action === 'clear') {\r\n      onSelect(null, action);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <SearchInput loadOptions={loadGroups} placeholder='Buscar categoría...' onSelect={handleSelect} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupSearch;\r\n","const BASE_URL = '/api/groups';\r\n\r\nexport const fetchGroups = async ({ filter, showNoe }) => {\r\n  const filterParam = filter ? `?filter=${filter}&showNoe=${showNoe}` : '';\r\n  const response = await fetch(BASE_URL + filterParam);\r\n  const groups = await response.json();\r\n  return groups;\r\n};\r\n","const columns = [\r\n  {\r\n    Header: 'Producto',\r\n    accessor: 'product',\r\n  },\r\n  {\r\n    Header: 'Precio',\r\n    accessor: 'price',\r\n  },\r\n  {\r\n    Header: 'Inventario',\r\n    accessor: 'stock',\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport columns from './columns';\r\n\r\nconst PriceListTable = ({ data, loading }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return <Table data={data} columns={memoizedColumns} loading={loading} />;\r\n};\r\n\r\nexport default PriceListTable;\r\n","const PriceListPDF = ({ data = [], group = '', currency }) => {\r\n  return (\r\n    <table id='price-list-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Categoría</th>\r\n          <th>Producto</th>\r\n          <th>{`Precio (${currency})`}</th>\r\n          <th>DISPONIBLE</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row) => {\r\n          if (row.stock > 0) {\r\n            return (\r\n              <tr key={row.productId}>\r\n                <td>{group}</td>\r\n                <td>{row.product}</td>\r\n                <td>{row.price}</td>\r\n                <td>EN STOCK</td>\r\n              </tr>\r\n            );\r\n          } else {\r\n            return '';\r\n          }\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PriceListPDF;\r\n","import { useState, useEffect, useRef, useContext } from 'react';\r\nimport { CurrencyRateContext } from '../../../context/currency_rate';\r\nimport GroupSearch from 'components/GroupSearch';\r\nimport { fetchProductPriceList } from 'api/products';\r\nimport PriceListTable from 'components/PriceListTable';\r\nimport { useReportFilter } from 'hooks/useReportFilter';\r\nimport { DateTime } from 'luxon';\r\nimport PriceListPDF from 'components/PDF/PriceList';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport { fetchProductsByGroup } from 'api/products';\r\nimport { Button } from 'react-bootstrap';\r\nimport CurrencyModal from 'components/Modals/CurrencyModal';\r\n\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst GroupStock = () => {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const { filteredData, setFilteredData, onFilterDebounced } = useReportFilter(data);\r\n  const inputRef = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showCurrencyModal, setShowCurrencyModal] = useState(false);\r\n\r\n  const { currencyRate } = useContext(CurrencyRateContext);\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup) {\r\n      const fetch_stock_by_group = async () => {\r\n        setLoading(true);\r\n        const data = await fetchProductPriceList(selectedGroup.groupId);\r\n        setFilteredData([]);\r\n        inputRef.current.value = '';\r\n        setData([...data]);\r\n        setLoading(false);\r\n      };\r\n\r\n      fetch_stock_by_group();\r\n    } else if (!selectedGroup) {\r\n      setData([]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedGroup]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Lista de precios por categoría</h3>\r\n        <Button variant='primary' onClick={() => setShowCurrencyModal(true)}>\r\n          <span>Imprimir</span>\r\n        </Button>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            gap: '20%',\r\n          }}\r\n        >\r\n          <GroupSearch onSelect={setSelectedGroup} />\r\n\r\n          <input\r\n            ref={inputRef}\r\n            className='input-filter'\r\n            placeholder='Buscar...'\r\n            type='search'\r\n            onChange={(event) => {\r\n              onFilterDebounced(event.target.value, 'product');\r\n            }}\r\n          />\r\n        </div>\r\n        <PriceListTable data={filteredData.length > 0 ? filteredData : data} loading={loading} />\r\n      </div>\r\n      {showCurrencyModal && (\r\n        <CurrencyModal\r\n          show={showCurrencyModal}\r\n          onClose={() => setShowCurrencyModal(false)}\r\n          onSubmit={async (currency) => {\r\n            console.log('currency', currency);\r\n            const groups = await fetchProductsByGroup();\r\n            var div = document.createElement('div');\r\n\r\n            const doc = new jsPDF('p', 'pt', 'a4');\r\n            const pdfName = `LISTA-DE-PRECIOS-${DateTime.fromISO(new Date().toISOString())\r\n              .toLocaleString()\r\n              .replaceAll('/', '-')}.pdf`;\r\n            doc.setProperties({\r\n              title: pdfName,\r\n            });\r\n            doc.setFontSize(16);\r\n            doc.text('ALIMENTOS DM MARKET, C.A.', 300, 25, { align: 'center' });\r\n            doc.setFontSize(6);\r\n            doc.text(\r\n              'CALLE ILUSTRES PROCERES LOCAL NRO S/N SECTOR CENTRO ALTAGRACIA DE ORITUCO DE ORITUCO ZONA POSTAL 2320.',\r\n              300,\r\n              35,\r\n              { align: 'center' }\r\n            );\r\n            doc.setFontSize(8);\r\n            doc.text('R.I.F.: J-41270446-0', 300, 45, { align: 'center' });\r\n            doc.text('Teléfono:', 300, 55, { align: 'center' });\r\n\r\n            doc.setFontSize(9);\r\n            doc.text(`LISTA DE PRECIOS AL ${DateTime.fromISO(new Date().toISOString()).toLocaleString()}`, 300, 70, {\r\n              align: 'center',\r\n            });\r\n\r\n            Object.keys(groups).forEach((key) => {\r\n              let products = groups[key];\r\n\r\n              products = products.map((product) => {\r\n                if (currency === 'Bs') {\r\n                  console.log('yes currency is Bs');\r\n                  return {\r\n                    ...product,\r\n                    price: Number(product.price * currencyRate?.Cambio).toFixed(2),\r\n                  };\r\n                }\r\n\r\n                return product;\r\n              });\r\n\r\n              div.innerHTML = renderToStaticMarkup(<PriceListPDF data={products} group={key} currency={currency} />);\r\n              doc.autoTable({\r\n                html: div.firstChild,\r\n                styles: { cellPadding: 2 },\r\n                didParseCell: (data) => {\r\n                  if (data.section === 'body' && data.cell.raw && data.cell.raw.nodeName === 'TH') {\r\n                    data.cell.styles.fillColor = 'gray';\r\n                    data.cell.styles.color = 'white';\r\n                    data.cell.styles.cellWidth = 'wrap';\r\n                  }\r\n                },\r\n                margin: { top: 80 },\r\n              });\r\n              doc.addPage();\r\n            });\r\n            doc.save(pdfName);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupStock;\r\n","import { useState } from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport const useReportFilter = (data_to_filter, initial_state = []) => {\r\n  const [filteredData, setFilteredData] = useState(initial_state);\r\n\r\n  const onFilterDebounced = debounce((filterValue, filterKey, nestedKey) => {\r\n    if (nestedKey) {\r\n      nestedFilter(filterValue, filterKey, nestedKey);\r\n    } else {\r\n      filter(filterValue, filterKey);\r\n    }\r\n  }, 500);\r\n\r\n  const filter = (filterValue, filterKey) => {\r\n    const filtered = data_to_filter.filter((r) => r[filterKey].toLowerCase().includes(filterValue.toLowerCase()));\r\n    setFilteredData(filtered);\r\n    return filtered;\r\n  };\r\n\r\n  const nestedFilter = (filterValue, filterKey, nestedKey) => {\r\n    console.log('nestedKLey', nestedKey);\r\n    const filtered = data_to_filter[nestedKey].filter((r) => r[filterKey].toLowerCase().includes(filterValue.toLowerCase()));\r\n    setFilteredData({ ...filteredData, [nestedKey]: filtered });\r\n  };\r\n\r\n  return {\r\n    filter,\r\n    filteredData,\r\n    setFilteredData,\r\n    onFilterDebounced,\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport { fetchCostPerGroup } from 'api/products';\r\n\r\nconst ProductCostPerGroupCard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setLoading(true);\r\n      const response = await fetchCostPerGroup();\r\n      if (response && response.length) {\r\n        const chartData = response.reduce(\r\n          (acc, current) => [\r\n            ...acc,\r\n            {\r\n              id: current.group_name,\r\n              label: current.product,\r\n              value: current.total_cost,\r\n            },\r\n          ],\r\n          []\r\n        );\r\n        console.log(response, chartData);\r\n        setData(chartData);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h3>Inversión por categoría</h3>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <ResponsivePie\r\n            data={data}\r\n            margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\r\n            innerRadius={0.5}\r\n            padAngle={0.7}\r\n            cornerRadius={3}\r\n            valueFormat={(value) => value.toLocaleString()}\r\n            activeOuterRadiusOffset={8}\r\n            borderWidth={1}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLinkLabelsTextColor='#333333'\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: 'color' }}\r\n            arcLabelsSkipAngle={10}\r\n            arcLabelsTextColor={{\r\n              from: 'color',\r\n              modifiers: [['darker', 2]],\r\n            }}\r\n          />\r\n        )}\r\n        {loading && (\r\n          <div className='position-absolute top-50 start-50 translate-middle'>\r\n            <span className='spinner-border spinner-border-md' role='status' aria-hidden='true' />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCostPerGroupCard;\r\n","import Container from 'react-bootstrap/Container';\r\nimport CostFluctuationCard from 'components/Cards/CostFluctuation';\r\nimport GroupStock from 'components/Cards/GroupStock';\r\nimport ProductCostPerGroup from 'components/ProductCostPerGroup/Card';\r\n\r\nconst ProductosPage = () => {\r\n  return (\r\n    <Container fluid>\r\n      <div className='d-flex flex-column flex-xl-row justify-content-center gap-3'>\r\n        <div className='col-12 col-xl-4'>\r\n          <CostFluctuationCard />\r\n        </div>\r\n        <div className='col-12 col-xl-4'>\r\n          <GroupStock />\r\n        </div>\r\n        <div className='col-12 col-xl-4'>\r\n          <ProductCostPerGroup />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductosPage;\r\n","import { DateTime } from 'luxon';\r\n\r\nconst columns = [\r\n  {\r\n    Header: 'ID',\r\n    accessor: 'invoiceId',\r\n  },\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n\r\n  {\r\n    Header: 'Rif',\r\n    accessor: 'rif',\r\n  },\r\n  {\r\n    Header: 'Fecha',\r\n    accessor: 'createdAt',\r\n    Cell: ({ value }) => {\r\n      return DateTime.fromISO(value, { setZone: true }).toFormat('F');\r\n    },\r\n  },\r\n\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'invoiceTotal',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.invoiceTotal;\r\n      }, 0);\r\n      return total ? '$' + Number(total).toLocaleString() : 0;\r\n    },\r\n  },\r\n\r\n  {\r\n    Header: 'Comisión',\r\n    accessor: 'commissionTotal',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.commissionTotal;\r\n      }, 0);\r\n      return total ? '$' + Number(total).toLocaleString() : 0;\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport columns from './columns';\r\n\r\nconst EmployeeSalesTable = ({ data, loading }) => {\r\n  const memoizedColumns = useMemo(() => columns, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='card'>\r\n        <div className='card-header'>\r\n          <h2>Reporte de ventas</h2>\r\n        </div>\r\n        <div className='card-body'>\r\n          <Table data={data} columns={memoizedColumns} loading={loading} showFooter maxHeight={400} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeSalesTable;\r\n","const BASE_URL = '/api/employees';\r\n\r\nexport const getAllEmployees = async () => {\r\n  const response = await fetch(`${BASE_URL}`);\r\n  const employees = await response.json();\r\n  return employees;\r\n};\r\n\r\nexport const getComisionInfo = async (employeeId) => {\r\n  const response = await fetch(`${BASE_URL}/commissionInfo/${employeeId}`).catch((error) => ({ error }));\r\n  const commissionInfo = await response.json();\r\n  return commissionInfo;\r\n};\r\n\r\nexport const updateComisionInfo = async (employeeId, data) => {\r\n  const res = await fetch(`${BASE_URL}/commissionInfo/${employeeId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ commissionInfo: data }),\r\n  }).catch((error) => ({ error }));\r\n\r\n  const response = await res.json();\r\n  return response;\r\n};\r\n\r\nexport const getEmployeeSales = async (employeeId, dateRange, showNoe) => {\r\n  const response = await fetch(\r\n    `${BASE_URL}/sales/${employeeId}?from=${dateRange.from}&to=${dateRange.to}&showNoe=${showNoe}`\r\n  ).catch((error) => ({ error }));\r\n  const sales = await response.json();\r\n  return sales;\r\n};\r\n","import { getAllEmployees } from 'api/employees';\r\nimport SearchInput from 'components/SearchInput';\r\n\r\nconst EmployeeSearch = ({ onSelect }) => {\r\n  const loadEmployees = async (inputValue) => {\r\n    let employees = await getAllEmployees({ filter: inputValue });\r\n\r\n    if (employees && employees.length > 0) {\r\n      const records = employees.map((record) => {\r\n        const employee = {\r\n          key: record.id,\r\n          label: record.name,\r\n          value: record,\r\n        };\r\n        return employee;\r\n      });\r\n\r\n      return records;\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option, { action }) => {\r\n    if (action === 'select-option') {\r\n      onSelect && onSelect(option.value, action);\r\n    } else if (action === 'clear') {\r\n      onSelect && onSelect(null, action);\r\n    }\r\n  };\r\n\r\n  return <SearchInput loadOptions={loadEmployees} placeholder='Buscar vendedor...' onSelect={handleSelect} />;\r\n};\r\n\r\nexport default EmployeeSearch;\r\n","import { useEffect, useState } from 'react';\r\nimport { Modal, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { getComisionInfo, updateComisionInfo } from 'api/employees';\r\n\r\nconst CommissionModal = ({ employee, show, onClose }) => {\r\n  const [commissionInfo, setCommissionInfo] = useState({ data: [], loading: false });\r\n  const [formData, setFormData] = useState({});\r\n  const [submissionState, setSubmissionState] = useState({\r\n    loading: false,\r\n    error: false,\r\n    message: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCommissionInfo({ ...commissionInfo, loading: true });\r\n    getComisionInfo(employee.id).then((data) => {\r\n      setCommissionInfo({ data, loading: false });\r\n    });\r\n  }, []);\r\n\r\n  const sanitizedFormData = () => {\r\n    const data = {};\r\n    Object.keys(formData).map((key) => {\r\n      if (formData[key]) {\r\n        data[key] = Number(formData[key]);\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault();\r\n    if (!submissionState.loading) {\r\n      setSubmissionState({ ...submissionState, loading: true, text: '' });\r\n      const response = await updateComisionInfo(employee.id, sanitizedFormData());\r\n      if (response.error) {\r\n        setSubmissionState({ error: true, text: response.error.message, loading: false });\r\n      } else if (response.success) {\r\n        setSubmissionState({ error: false, text: 'El recurso fue actualizado con éxito', loading: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const modalBody = () => {\r\n    if (commissionInfo.data.error) {\r\n      return <Alert variant='danger'>{commissionInfo.data.error.message}</Alert>;\r\n    } else if (commissionInfo.loading) {\r\n      return <Spinner animation='border' />;\r\n    } else {\r\n      return commissionInfo.data.map((info) => {\r\n        return (\r\n          <div key={info.groupId} className='d-flex flex-column col-sm-4'>\r\n            <label className='form-label'>{info.group}</label>\r\n            <div className='input-group mb-3'>\r\n              <span className='input-group-text' id='basic-addon1'>\r\n                %\r\n              </span>\r\n              <input\r\n                type='number'\r\n                min={0}\r\n                step={0.01}\r\n                className='form-control'\r\n                placeholder={info.commission || 0}\r\n                value={formData[info.groupId] || ''}\r\n                onChange={(e) => setFormData({ ...formData, [info.groupId]: e.target.value })}\r\n                onFocus={(e) => e.target.select()}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} size='lg' onHide={onClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{employee.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <form onSubmit={submitForm}>\r\n        <Modal.Body>\r\n          <div className='row justify-content-center'>{modalBody()}</div>\r\n        </Modal.Body>\r\n        <Modal.Footer className='px-0 pb-2'>\r\n          <div className='container-fluid d-flex justify-content-between align-items-center gap-5'>\r\n            <div className='col-9'>\r\n              {submissionState.text && (\r\n                <Alert variant={submissionState.error ? 'danger' : 'success'} className='mb-0 mt-0 p-1'>\r\n                  {submissionState.text}\r\n                </Alert>\r\n              )}\r\n            </div>\r\n            <div className='col-3 d-flex flex-wrap gap-2'>\r\n              <Button\r\n                type='submit'\r\n                variant='success'\r\n                disabled={Object.keys(formData).length === 0 || submissionState.loading}\r\n              >\r\n                Enviar\r\n              </Button>\r\n              <Button variant='danger' onClick={onClose}>\r\n                Cerrar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CommissionModal;\r\n","import { useContext, useState } from 'react';\r\nimport EmployeeSearch from 'employees/Search';\r\nimport { Button } from 'react-bootstrap';\r\nimport DatePicker from 'components/DatePicker';\r\nimport CommissionModal from 'employees/Modal/Commission';\r\nimport { getEmployeeSales } from 'api/employees';\r\nimport { ShowNoeContext } from 'context/show_noe';\r\n\r\nconst EmployeeActions = ({ onDateSubmit }) => {\r\n  const [employeeSalesLoading, setEmployeeSalesLoading] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [showCommissionModal, setShowCommissionModal] = useState(false);\r\n  const { showNoe } = useContext(ShowNoeContext);\r\n\r\n  const submitDateHandler = (event, dateRange) => {\r\n    event.preventDefault();\r\n    if (selectedEmployee) {\r\n      setEmployeeSalesLoading(true);\r\n      getEmployeeSales(selectedEmployee.id, dateRange, showNoe).then((response) => {\r\n        setEmployeeSalesLoading(false);\r\n        onDateSubmit(response);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='col-12 mb-4'>\r\n        <div className='row justify-content-end'>\r\n          <div className='col-6 mb-2'>\r\n            <EmployeeSearch onSelect={setSelectedEmployee} />\r\n          </div>\r\n          <div className='col-4'>\r\n            <Button variant='primary' disabled={!selectedEmployee} onClick={() => setShowCommissionModal(true)}>\r\n              Asignar comisión\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <DatePicker onSubmit={submitDateHandler} loading={employeeSalesLoading} submitDisabled={!selectedEmployee} />\r\n      </div>\r\n      {showCommissionModal && (\r\n        <CommissionModal\r\n          show={showCommissionModal}\r\n          onClose={() => setShowCommissionModal(false)}\r\n          employee={selectedEmployee}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeActions;\r\n","import { useState } from 'react';\r\nimport EmployeeSalesTable from 'employees/Table/Sales';\r\nimport EmployeeActions from 'employees/Actions';\r\n\r\nconst EmployeesPage = () => {\r\n  const [employeeSales, setEmployeeSales] = useState([]);\r\n\r\n  const onSubmit = (sales) => {\r\n    setEmployeeSales(sales);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='row justify-content-center'>\r\n        <div className='col-sm-12 col-xl-8'>\r\n          <EmployeeActions onDateSubmit={onSubmit} />\r\n          <EmployeeSalesTable data={employeeSales} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeesPage;\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport { CurrencyRateContext } from './context/currency_rate';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nimport InvoicesPage from 'pages/invoices';\r\nimport VentasPage from 'pages/ventas';\r\nimport ClientesPage from 'pages/clientes';\r\nimport ProductosPage from 'pages/productos';\r\nimport EmployeesPage from 'pages/employees';\r\n\r\nimport { ShowNoeContext } from 'context/show_noe';\r\n\r\nimport { Link, Switch, Route, useLocation } from 'react-router-dom';\r\nimport { fetchCurrencyRates } from './api/currency_rates';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { currencyRate, setCurrencyRate } = useContext(CurrencyRateContext);\r\n  const { showNoe, setShowNoe } = useContext(ShowNoeContext);\r\n\r\n  useEffect(() => {\r\n    fetchCurrencyRates().then((response) => {\r\n      if (response.status === 200) {\r\n        setCurrencyRate(response.data.find((currency) => currency.Simbolo === 'BsS'));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='App bg-dark'>\r\n      <Container fluid id='main' className='m-0 p-0 vh-100'>\r\n        <Navbar bg='dark' variant='dark' className='border-bottom' expand='lg'>\r\n          <Container fluid>\r\n            <Navbar.Brand>SISTEMA DE REPORTES</Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse id='basic-navbar-nav'>\r\n              <Container fluid className='d-flex gap-5 justify-content-between align-items-center'>\r\n                <Nav className='me-auto'>\r\n                  {['facturas', 'ventas', 'clientes', 'productos', 'vendedores'].map((route, index) => {\r\n                    return (\r\n                      <Link\r\n                        key={index}\r\n                        to={`/${route}`}\r\n                        className={`text-decoration-none mx-1 text-secondary nav-link ${\r\n                          (location.pathname.includes(route) && 'active') || ''\r\n                        }`}\r\n                      >\r\n                        <span style={{ textTransform: 'capitalize' }}>{route}</span>\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </Nav>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>\r\n                  <span className='text-light'>Mostrar Facturas</span>\r\n                  <div>\r\n                    <label className='switch'>\r\n                      <input type='checkbox' checked={showNoe } onChange={(e) => setShowNoe(e.target.checked)} />\r\n                      <span className='slider round'></span>\r\n                    </label>\r\n                  </div>\r\n                  <span className='text-light'>Mostrar Notas</span>\r\n                </div>\r\n                <div className='text-light'>\r\n                  <span>\r\n                    REF: <span className='fw-bold text-info'>{currencyRate?.Cambio}</span> {currencyRate?.Simbolo}\r\n                  </span>\r\n                </div>\r\n              </Container>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <Container fluid className='py-3'>\r\n          <Switch>\r\n            <Route path='/facturas' component={InvoicesPage} />\r\n            <Route path='/ventas' component={VentasPage} />\r\n            <Route path='/clientes' component={ClientesPage} />\r\n            <Route path='/productos' component={ProductosPage} />\r\n            <Route path='/vendedores' component={EmployeesPage} />\r\n          </Switch>\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const BASE_URL = '/api/currency_rates';\r\n\r\nexport const fetchCurrencyRates = async () => {\r\n  const response = await fetch(`${BASE_URL}`);\r\n  const data = await response.json();\r\n\r\n  return { status: response.status, data };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { CurrencyRateProvider } from './context/currency_rate';\r\nimport { ShowNoesProvider } from 'context/show_noe';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <CurrencyRateProvider>\r\n        <ShowNoesProvider>\r\n          <App />\r\n        </ShowNoesProvider>\r\n      </CurrencyRateProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}