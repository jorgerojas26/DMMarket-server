{"version":3,"sources":["components/Table/index.js","components/SaleReportTable/columns.js","components/SaleReportTable/index.js","components/ClientReportTable/columns.js","components/ClientReportTable/index.js","api/invoice/index.js","components/Cards/SaleReport/index.js","components/Cards/ClientReport/index.js","components/SearchInput/index.js","api/products/index.js","components/ProductSearch/index.js","components/Cards/PriceFluctuation/index.js","components/Cards/ClientRegistration/index.js","App.js","hooks/useReportFilter.js","index.js"],"names":["Table","data","loading","columns","filterPlaceholder","onFilter","maxheight","showFooter","onRowSelect","useTable","stateReducer","newState","action","type","selectedRowIds","id","isSelected","useRowSelect","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","onFilterDebounced","selectedFlatRows","debounce","value","className","onChange","event","target","placeholder","autoFocus","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","onClick","toggleRowSelected","getToggleRowSelectedProps","cells","cell","index","title","getCellProps","style","background","group","getFooterGroupProps","getFooterProps","length","Header","accessor","Cell","toLocaleString","Footer","total","reduce","acc","current","rawProfit","Number","toFixed","netProfit","SaleReportTable","memoizedColumns","useMemo","ClientReportTable","fetchInvoiceReport","a","from","to","fetch","response","json","report","console","log","SaleReportCard","ClientReportCard","SearchInput","loadOptions","defaultOptions","cacheOptions","onSelect","inputValue","callback","loadingMessage","isClearable","fetchProducts","filter","filterParam","products","fetchProductReports","productId","ProductSearch","loadProductVariants","records","record","product_name","Descripcion","key","label","option","PrriceFluctuation","useState","selectedProduct","setSelectedProduct","setData","useEffect","fetch_product_report","idProducto","report_data","height","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","ClientRegistration","App","DateTime","now","toISODate","dateRange","setDateRange","sale_report","categories_report","client_report","new_clients_report","reportDetails","setReportDetails","buy_price_fluctuation","chartData","setChartData","data_to_filter","initial_state","filteredData","setFilteredData","filterValue","filterKey","filtered","r","toLowerCase","includes","useReportFilter","onSubmit","preventDefault","categories_report_chart_data","categoria","client_report_chart_data","client","total_USD","SaleReport","ClientReport","PriceFluctuation","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","arcLabel","e","borderWidth","borderColor","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","tooltip","datum","color","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.082e6b76.chunk.js","sourcesContent":["import { useTable, useRowSelect } from 'react-table';\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst Table = ({ data = [], loading, columns = [], filterPlaceholder, onFilter, maxheight, showFooter = false, onRowSelect }) => {\r\n  const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow, selectedFlatRows } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      stateReducer: (newState, action) => {\r\n        if (action.type === 'toggleRowSelected') {\r\n          newState.selectedRowIds = {\r\n            [action.id]: !action.isSelected,\r\n          };\r\n        }\r\n\r\n        return newState;\r\n      },\r\n    },\r\n    useRowSelect\r\n  );\r\n\r\n  const onFilterDebounced = debounce((value) => {\r\n    onFilter(value);\r\n  }, 500);\r\n\r\n  return (\r\n    <>\r\n      {onFilter && (\r\n        <div className='table-filter-container'>\r\n          <input\r\n            className='table-filter-input'\r\n            onChange={(event) => onFilterDebounced(event.target.value)}\r\n            placeholder={filterPlaceholder}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='table-container' maxheight={maxheight}>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr\r\n                  {...row.getRowProps({\r\n                    onClick: onRowSelect\r\n                      ? () => {\r\n                          row.toggleRowSelected();\r\n                          onRowSelect();\r\n                        }\r\n                      : null,\r\n                  })}\r\n                  {...row.getToggleRowSelectedProps({})}\r\n                >\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <td title={cell.value} {...cell.getCellProps()} style={{ background: row.isSelected ? 'lightgreen' : 'white' }}>\r\n                        {cell.render('Cell')}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          {showFooter && (\r\n            <tfoot>\r\n              {footerGroups.map((group) => (\r\n                <tr {...group.getFooterGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tfoot>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {loading && (\r\n        <div className='loading-container' data={data.length ? 1 : 0}>\r\n          Cargando...\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","const columns = [\r\n  {\r\n    Header: 'Producto',\r\n    accessor: 'product',\r\n  },\r\n  {\r\n    Header: 'Cantidad',\r\n    accessor: 'quantity',\r\n  },\r\n  {\r\n    Header: 'Bruto',\r\n    accessor: 'rawProfit',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.rawProfit;\r\n      }, 0);\r\n      return '$' + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n  {\r\n    Header: 'Utilidad',\r\n    accessor: 'netProfit',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.netProfit;\r\n      }, 0);\r\n      return '$' + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst SaleReportTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} showFooter />;\r\n};\r\n\r\nexport default SaleReportTable;\r\n","const columns = [\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'total_USD',\r\n    Cell: ({ value }) => {\r\n      return '$' + value.toLocaleString();\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst ClientReportTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} />;\r\n};\r\n\r\nexport default ClientReportTable;\r\n","const BASE_URL = '/api/reports/invoice';\r\n\r\nexport const fetchInvoiceReport = async ({ from, to }) => {\r\n  const response = await fetch(`${BASE_URL}?from=${from}&to=${to}`);\r\n  const report = await response.json();\r\n  console.log('From fetchInvoiceReport: ', report);\r\n  return report;\r\n};\r\n","import SaleReportTable from '../../SaleReportTable';\r\n\r\nconst SaleReportCard = ({ data = [], onFilter }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Ventas</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'sale_report', 'product')}\r\n            />\r\n            <SaleReportTable data={data} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleReportCard;\r\n","import ClientReportTable from '../../ClientReportTable';\r\n\r\nconst ClientReportCard = ({ data = [], onFilter }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Clientes</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'client_report', 'client')}\r\n            />\r\n            <ClientReportTable data={data} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientReportCard;\r\n","import AsyncSelect from 'react-select/async';\r\nimport debounce from 'debounce-promise';\r\n\r\nconst SearchInput = ({ placeholder, loadOptions, defaultOptions = true, cacheOptions = true, onSelect }) => {\r\n  return (\r\n    <AsyncSelect\r\n      loadOptions={debounce((inputValue, callback) => loadOptions(inputValue, callback), 700)}\r\n      cacheOptions={cacheOptions}\r\n      placeholder={placeholder}\r\n      onChange={onSelect}\r\n      loadingMessage={() => {\r\n        return 'Cargando...';\r\n      }}\r\n      isClearable\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const BASE_URL = '/api/products';\r\nconst REPORTS_BASE_URL = '/api/reports/products';\r\n\r\nexport const fetchProducts = async ({ filter }) => {\r\n  const filterParam = filter ? `?filter=${filter}` : '';\r\n  const response = await fetch(BASE_URL + filterParam);\r\n  const products = await response.json();\r\n  return products;\r\n};\r\n\r\nexport const fetchProductReports = async (productId) => {\r\n  const response = await fetch(`${REPORTS_BASE_URL}/buy-price-fluctuation/${productId}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n","import { useEffect } from 'react';\r\nimport SearchInput from '../SearchInput';\r\nimport { fetchProducts } from '../../api/products';\r\n\r\nconst ProductSearch = ({ onSelect }) => {\r\n  const loadProductVariants = async (inputValue) => {\r\n    let products = await fetchProducts({ filter: inputValue });\r\n\r\n    if (products && products.length > 0) {\r\n      const records = products.map((record) => {\r\n        let product_name = record.Descripcion;\r\n\r\n        const product = {\r\n          key: record.id,\r\n          label: product_name,\r\n          value: record,\r\n        };\r\n        return product;\r\n      });\r\n\r\n      return records;\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option, { action }) => {\r\n    if (action === 'select-option') {\r\n      onSelect(option.value, action);\r\n    } else if (action === 'clear') {\r\n      onSelect(null, action);\r\n    }\r\n  };\r\n\r\n  return <SearchInput loadOptions={loadProductVariants} placeholder='Buscar producto...' onSelect={handleSelect} />;\r\n};\r\n\r\nexport default ProductSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport ProductSearch from '../../ProductSearch';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { fetchProductReports } from '../../../api/products';\r\n\r\nconst PrriceFluctuation = () => {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct) {\r\n      const fetch_product_report = async () => {\r\n        const report_data = await fetchProductReports(selectedProduct.idProducto);\r\n\r\n        setData([report_data]);\r\n      };\r\n\r\n      fetch_product_report();\r\n    } else if (!selectedProduct) {\r\n      setData([]);\r\n    }\r\n  }, [selectedProduct]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Promedio mensual costo</h2>\r\n      </div>\r\n      <div className='card-body'></div>\r\n      <ProductSearch onSelect={setSelectedProduct} />\r\n      <div style={{ height: '300px' }}>\r\n        <ResponsiveLine\r\n          data={data}\r\n          margin={{ top: 50, right: 50, bottom: 50, left: 60 }}\r\n          xScale={{ type: 'point' }}\r\n          yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          pointSize={10}\r\n          pointColor={{ theme: 'background' }}\r\n          pointBorderWidth={2}\r\n          pointBorderColor={{ from: 'serieColor' }}\r\n          pointLabelYOffset={-12}\r\n          useMesh={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrriceFluctuation;\r\n","import ClientReportTable from '../../ClientReportTable';\r\n\r\nconst ClientRegistration = ({ data = [], onFilter = () => {} }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Nuevos clientes</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'client_report', 'client')}\r\n            />\r\n            <ClientReportTable data={data} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientRegistration;\r\n","import { useState, useEffect, useMemo } from 'react';\n\nimport SaleReportTable from './components/SaleReportTable';\nimport ClientReportTable from './components/ClientReportTable';\n\nimport { DateTime } from 'luxon';\n\nimport { fetchInvoiceReport } from './api/invoice';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport SaleReportCard from './components/Cards/SaleReport';\nimport ClientReportCard from './components/Cards/ClientReport';\nimport PriceFluctuationCard from './components/Cards/PriceFluctuation';\n\nimport { useReportFilter } from './hooks/useReportFilter';\nimport ClientRegistration from './components/Cards/ClientRegistration';\n\nfunction App() {\n  const [dateRange, setDateRange] = useState({\n    from: DateTime.now().toISODate(),\n    to: DateTime.now().toISODate(),\n  });\n  const [reportDetails, setReportDetails] = useState({\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    new_clients_report: [],\n  });\n  const [chartData, setChartData] = useState({\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    buy_price_fluctuation: [],\n    new_clients_report: [],\n  });\n\n  const { filteredData, onFilterDebounced } = useReportFilter(reportDetails, {\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    new_clients_report: [],\n  });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    const response = await fetchInvoiceReport(dateRange);\n    setReportDetails({ ...response });\n  };\n\n  useEffect(() => {\n    const categories_report_chart_data = reportDetails.categories_report.reduce((acc, current) => {\n      return [...acc, { id: current.categoria, label: current.categoria, value: current.rawProfit, netProfit: current.netProfit }];\n    }, []);\n\n    const client_report_chart_data = reportDetails.client_report.reduce((acc, current) => {\n      return [...acc, { id: current.client, label: current.client, value: current.total_USD }];\n    }, []);\n\n    setChartData({ ...chartData, categories_report: categories_report_chart_data, client_report: client_report_chart_data });\n  }, [reportDetails]);\n\n  return (\n    <div className='App'>\n      <div id='date-range-wrapper'>\n        <div id='date-range-container'>\n          <label>Desde:</label>\n          <input type='date' value={dateRange.from} onChange={(event) => setDateRange({ ...dateRange, from: event.target.value })} />\n          <label>Hasta:</label>\n          <input type='date' value={dateRange.to} onChange={(event) => setDateRange({ ...dateRange, to: event.target.value })} />\n          <input type='submit' onClick={onSubmit} />\n        </div>\n      </div>\n      <main id='main'>\n        <div id='left-content'>\n          <SaleReportCard\n            data={filteredData.sale_report.length ? filteredData.sale_report : reportDetails.sale_report}\n            onFilter={onFilterDebounced}\n          />\n          <ClientReportCard\n            data={filteredData.client_report.length ? filteredData.client_report : reportDetails.client_report}\n            onFilter={onFilterDebounced}\n          />\n          <PriceFluctuationCard />\n          <ClientRegistration\n            data={filteredData.new_clients_report.length ? filteredData.new_clients_report : reportDetails.new_clients_report}\n            onFilter={onFilterDebounced}\n          />\n        </div>\n        <div id='right-content'>\n          <div className='card'>\n            <div className='card-header'>\n              <h2>Gráfico de categorías</h2>\n            </div>\n            <div className='card-body'>\n              {chartData.categories_report.length > 0 && (\n                <div style={{ height: '300px' }}>\n                  <ResponsivePie\n                    data={chartData.categories_report}\n                    margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    activeOuterRadiusOffset={8}\n                    arcLabel={function (e) {\n                      return `${e.value} (${e.data.netProfit})`;\n                    }}\n                    borderWidth={1}\n                    borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                    arcLinkLabelsSkipAngle={10}\n                    arcLinkLabelsTextColor='#333333'\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    tooltip={({ datum }) => {\n                      return (\n                        <div className='tooltip-container'>\n                          <span className='small-square' style={{ background: datum.color }}></span>\n                          <strong>{datum.label}</strong>\n                          <label>Bruto: </label>\n                          <span>${Number(datum.value).toLocaleString()}</span>\n                          <label>Utilidad: </label>\n                          <span>${Number(datum.data.netProfit).toLocaleString()}</span>\n                        </div>\n                      );\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='card'>\n            <div className='card-header'>\n              <h2>Gráfico de clientes</h2>\n            </div>\n            <div className='card-body'>\n              {chartData.client_report.length > 0 && (\n                <div style={{ height: '300px' }}>\n                  <ResponsivePie\n                    data={chartData.client_report}\n                    margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    activeOuterRadiusOffset={8}\n                    borderWidth={1}\n                    borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                    arcLinkLabelsSkipAngle={10}\n                    arcLinkLabelsTextColor='#333333'\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport const useReportFilter = (data_to_filter, initial_state = []) => {\r\n  const [filteredData, setFilteredData] = useState(initial_state);\r\n\r\n  const onFilterDebounced = debounce((filterValue, report, filterKey) => {\r\n    filter(filterValue, report, filterKey);\r\n  }, 500);\r\n\r\n  const filter = (filterValue, report, filterKey) => {\r\n    const filtered = data_to_filter[report].filter((r) => r[filterKey].toLowerCase().includes(filterValue.toLowerCase()));\r\n    setFilteredData({ ...filteredData, [report]: filtered });\r\n  };\r\n\r\n  return {\r\n    filteredData,\r\n    setFilteredData,\r\n    onFilterDebounced,\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}