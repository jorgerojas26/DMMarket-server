{"version":3,"sources":["api/invoice/index.js","components/Table/index.js","components/SaleReportTable/columns.js","components/SaleReportTable/index.js","components/Cards/SaleReport/index.js","components/ClientReportTable/columns.js","components/ClientReportTable/index.js","components/Cards/ClientReport/index.js","components/SearchInput/index.js","api/products/index.js","components/ProductSearch/index.js","components/Cards/CostFluctuation/index.js","api/groups/index.js","components/GroupSearch/index.js","components/PriceListTable/columns.js","components/PriceListTable/index.js","hooks/useReportFilter.js","components/Cards/GroupStock/index.js","components/ClientPerProduct/Table/columns.js","components/ClientPerProduct/Table/index.js","components/ClientPerProduct/Card/index.js","App.js","index.js"],"names":["fetchInvoiceReport","a","from","to","fetch","response","json","report","console","log","Table","data","loading","columns","filterPlaceholder","onFilter","maxheight","showFooter","onRowSelect","useTable","stateReducer","newState","action","type","selectedRowIds","id","isSelected","useRowSelect","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","onFilterDebounced","selectedFlatRows","debounce","value","className","onChange","event","target","placeholder","autoFocus","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","onClick","toggleRowSelected","getToggleRowSelectedProps","cells","cell","index","title","getCellProps","style","background","group","getFooterGroupProps","getFooterProps","length","Header","accessor","Cell","toLocaleString","Footer","total","reduce","acc","current","rawProfit","Number","toFixed","netProfit","SaleReportTable","memoizedColumns","useMemo","SaleReportCard","useState","sorting","setSorting","sortedData","setSortedData","useEffect","sorted","sort","b","ClientReportTable","ClientReportCard","SearchInput","loadOptions","defaultOptions","cacheOptions","onSelect","inputValue","callback","loadingMessage","isClearable","BASE_URL","REPORTS_BASE_URL","fetchProducts","filter","filterParam","products","fetchProductPriceList","groupId","fetchProductReports","productId","fetchBestClients","dateRange","ProductSearch","loadProductVariants","records","record","product_name","Descripcion","key","label","option","CostFluctuation","selectedProduct","setSelectedProduct","setData","fetch_product_report","IdProducto","report_data","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","fetchGroups","groups","GroupSearch","loadGroups","name","width","PriceListTable","useReportFilter","data_to_filter","initial_state","filteredData","setFilteredData","filterValue","filterKey","nestedKey","nestedFilter","filtered","r","toLowerCase","includes","GroupStock","selectedGroup","setSelectedGroup","inputRef","useRef","fetch_stock_by_group","display","justifyContent","gap","ref","ClientPerProductTable","ClientPerProductCard","fetch_best_clients","flexDirection","DateTime","fromISO","flex","App","now","toISODate","setDateRange","sale_report","categories_report","client_report","new_clients_report","reportDetails","setReportDetails","buy_price_fluctuation","chartData","setChartData","onSubmit","preventDefault","categories_report_chart_data","categoria","client_report_chart_data","client","total_USD","SaleReport","ClientReport","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","arcLabel","e","borderWidth","borderColor","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","tooltip","datum","color","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf7761cd.chunk.js","sourcesContent":["const BASE_URL = '/api/reports/invoice';\r\n\r\nexport const fetchInvoiceReport = async ({ from, to }) => {\r\n  const response = await fetch(`${BASE_URL}?from=${from}&to=${to}`);\r\n  const report = await response.json();\r\n  console.log('From fetchInvoiceReport: ', report);\r\n  return report;\r\n};\r\n","import { useTable, useRowSelect } from 'react-table';\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst Table = ({ data = [], loading, columns = [], filterPlaceholder, onFilter, maxheight, showFooter = false, onRowSelect }) => {\r\n  const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow, selectedFlatRows } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      stateReducer: (newState, action) => {\r\n        if (action.type === 'toggleRowSelected') {\r\n          newState.selectedRowIds = {\r\n            [action.id]: !action.isSelected,\r\n          };\r\n        }\r\n\r\n        return newState;\r\n      },\r\n    },\r\n    useRowSelect\r\n  );\r\n\r\n  const onFilterDebounced = debounce((value) => {\r\n    onFilter(value);\r\n  }, 500);\r\n\r\n  return (\r\n    <>\r\n      {onFilter && (\r\n        <div className='table-filter-container'>\r\n          <input\r\n            className='table-filter-input'\r\n            onChange={(event) => onFilterDebounced(event.target.value)}\r\n            placeholder={filterPlaceholder}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='table-container' maxheight={maxheight}>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr\r\n                  {...row.getRowProps({\r\n                    onClick: onRowSelect\r\n                      ? () => {\r\n                          row.toggleRowSelected();\r\n                          onRowSelect();\r\n                        }\r\n                      : null,\r\n                  })}\r\n                  {...row.getToggleRowSelectedProps({})}\r\n                >\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <td title={cell.value} {...cell.getCellProps()} style={{ background: row.isSelected ? 'lightgreen' : 'white' }}>\r\n                        {cell.render('Cell')}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          {showFooter && (\r\n            <tfoot>\r\n              {footerGroups.map((group) => (\r\n                <tr {...group.getFooterGroupProps()}>\r\n                  {group.headers.map((column) => (\r\n                    <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tfoot>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {loading && (\r\n        <div className='loading-container' data={data.length ? 1 : 0}>\r\n          Cargando...\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","const columns = [\r\n  {\r\n    Header: 'Producto',\r\n    accessor: 'product',\r\n  },\r\n  {\r\n    Header: 'Cantidad',\r\n    accessor: 'quantity',\r\n  },\r\n  {\r\n    Header: 'Bruto',\r\n    accessor: 'rawProfit',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.rawProfit;\r\n      }, 0);\r\n      return '$' + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n  {\r\n    Header: 'Utilidad',\r\n    accessor: 'netProfit',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n    Footer: ({ data }) => {\r\n      const total = data.reduce((acc, current) => {\r\n        return acc + current.netProfit;\r\n      }, 0);\r\n      return '$' + Number(total.toFixed(2)).toLocaleString();\r\n    },\r\n  },\r\n  {\r\n    Header: 'Promedio',\r\n    accessor: 'averageProfitPercent',\r\n    Cell: ({ value }) => {\r\n      return value + '%';\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst SaleReportTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} showFooter />;\r\n};\r\n\r\nexport default SaleReportTable;\r\n","import { useEffect, useState } from 'react';\r\nimport SaleReportTable from '../../SaleReportTable';\r\n\r\nconst SaleReportCard = ({ data = [], onFilter }) => {\r\n  const [sorting, setSorting] = useState('rawProfit');\r\n  const [sortedData, setSortedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sorted = data.sort((a, b) => {\r\n      return b[sorting] - a[sorting];\r\n    });\r\n    setSortedData([...sorted]);\r\n  }, [sorting, data]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Ventas</h2>\r\n        <div>\r\n          <label>Ordenar: </label>\r\n          <select onChange={(event) => setSorting(event.target.value)} value={sorting}>\r\n            <option value='quantity'>Cantidad</option>\r\n            <option value='rawProfit'>Bruto</option>\r\n            <option value='netProfit'>Utilidad</option>\r\n            <option value='averageProfitPercent'>Promedio</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='card-body'>\r\n        {sortedData.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'product', 'sale_report')}\r\n            />\r\n            <SaleReportTable data={sortedData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaleReportCard;\r\n","const columns = [\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'total_USD',\r\n    Cell: ({ value }) => {\r\n      return '$' + value.toLocaleString();\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst ClientReportTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} />;\r\n};\r\n\r\nexport default ClientReportTable;\r\n","import ClientReportTable from '../../ClientReportTable';\r\n\r\nconst ClientReportCard = ({ data = [], onFilter }) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Clientes</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        {data.length > 0 && (\r\n          <>\r\n            <input\r\n              className='input-filter'\r\n              placeholder='Buscar...'\r\n              type='search'\r\n              onChange={(event) => onFilter(event.target.value, 'client', 'client_report')}\r\n            />\r\n            <ClientReportTable data={data} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientReportCard;\r\n","import AsyncSelect from 'react-select/async';\r\nimport debounce from 'debounce-promise';\r\n\r\nconst SearchInput = ({ placeholder, loadOptions, defaultOptions = true, cacheOptions = true, onSelect }) => {\r\n  return (\r\n    <AsyncSelect\r\n      loadOptions={debounce((inputValue, callback) => loadOptions(inputValue, callback), 700)}\r\n      cacheOptions={cacheOptions}\r\n      defaultOptions={defaultOptions}\r\n      placeholder={placeholder}\r\n      onChange={onSelect}\r\n      loadingMessage={() => {\r\n        return 'Cargando...';\r\n      }}\r\n      isClearable\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const BASE_URL = '/api/products';\r\nconst REPORTS_BASE_URL = '/api/reports/products';\r\n\r\nexport const fetchProducts = async ({ filter }) => {\r\n  const filterParam = filter ? `?filter=${filter}` : '';\r\n  const response = await fetch(BASE_URL + filterParam);\r\n  const products = await response.json();\r\n  return products;\r\n};\r\n\r\nexport const fetchProductPriceList = async (groupId) => {\r\n  const response = await fetch(`${BASE_URL}/price-list/${groupId}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchProductReports = async (productId) => {\r\n  const response = await fetch(`${REPORTS_BASE_URL}/cost-fluctuation/${productId}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n\r\nexport const fetchBestClients = async (productId, dateRange) => {\r\n  const response = await fetch(`${REPORTS_BASE_URL}/best-clients/${productId}?from=${dateRange.from}&to=${dateRange.to}`);\r\n  const report = response.json();\r\n  return report;\r\n};\r\n","import SearchInput from '../SearchInput';\r\nimport { fetchProducts } from '../../api/products';\r\n\r\nconst ProductSearch = ({ onSelect }) => {\r\n  const loadProductVariants = async (inputValue) => {\r\n    let products = await fetchProducts({ filter: inputValue });\r\n\r\n    if (products && products.length > 0) {\r\n      const records = products.map((record) => {\r\n        let product_name = record.Descripcion;\r\n\r\n        const product = {\r\n          key: record.id,\r\n          label: product_name,\r\n          value: record,\r\n        };\r\n        return product;\r\n      });\r\n\r\n      return records;\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option, { action }) => {\r\n    if (action === 'select-option') {\r\n      onSelect(option.value, action);\r\n    } else if (action === 'clear') {\r\n      onSelect(null, action);\r\n    }\r\n  };\r\n\r\n  return <SearchInput loadOptions={loadProductVariants} defaultOptions={false} placeholder='Buscar producto...' onSelect={handleSelect} />;\r\n};\r\n\r\nexport default ProductSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport ProductSearch from '../../ProductSearch';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { fetchProductReports } from '../../../api/products';\r\n\r\nconst CostFluctuation = () => {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct) {\r\n      const fetch_product_report = async () => {\r\n        const report_data = await fetchProductReports(selectedProduct.IdProducto);\r\n        console.log(report_data);\r\n\r\n        setData([report_data]);\r\n      };\r\n\r\n      fetch_product_report();\r\n    } else if (!selectedProduct) {\r\n      setData([]);\r\n    }\r\n  }, [selectedProduct]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Promedio mensual costo</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        <ProductSearch onSelect={setSelectedProduct} />\r\n        <ResponsiveLine\r\n          data={data}\r\n          margin={{ top: 20, right: 30, bottom: 80, left: 40 }}\r\n          xScale={{ type: 'point' }}\r\n          yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          pointSize={10}\r\n          pointColor={{ theme: 'background' }}\r\n          pointBorderWidth={2}\r\n          pointBorderColor={{ from: 'serieColor' }}\r\n          pointLabelYOffset={-12}\r\n          useMesh={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CostFluctuation;\r\n","const BASE_URL = '/api/groups';\r\n\r\nexport const fetchGroups = async ({ filter }) => {\r\n  const filterParam = filter ? `?filter=${filter}` : '';\r\n  const response = await fetch(BASE_URL + filterParam);\r\n  const groups = await response.json();\r\n  return groups;\r\n};\r\n","import SearchInput from '../SearchInput';\r\nimport { fetchGroups } from '../../api/groups';\r\n\r\nconst GroupSearch = ({ onSelect }) => {\r\n  const loadGroups = async (inputValue) => {\r\n    let groups = await fetchGroups({ filter: inputValue });\r\n\r\n    if (groups && groups.length > 0) {\r\n      const records = groups.map((record) => {\r\n        const group = {\r\n          key: record.groupId,\r\n          label: record.name,\r\n          value: record,\r\n        };\r\n        return group;\r\n      });\r\n\r\n      return records;\r\n    }\r\n  };\r\n\r\n  const handleSelect = (option, { action }) => {\r\n    if (action === 'select-option') {\r\n      onSelect(option.value, action);\r\n    } else if (action === 'clear') {\r\n      onSelect(null, action);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <SearchInput loadOptions={loadGroups} placeholder='Buscar categoría...' onSelect={handleSelect} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupSearch;\r\n","const columns = [\r\n  {\r\n    Header: 'Producto',\r\n    accessor: 'product',\r\n  },\r\n  {\r\n    Header: 'Precio',\r\n    accessor: 'price',\r\n  },\r\n  {\r\n    Header: 'Inventario',\r\n    accessor: 'stock',\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../Table';\r\nimport columns from './columns';\r\n\r\nconst PriceListTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} />;\r\n};\r\n\r\nexport default PriceListTable;\r\n","import { useState } from 'react';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport const useReportFilter = (data_to_filter, initial_state = []) => {\r\n  const [filteredData, setFilteredData] = useState(initial_state);\r\n\r\n  const onFilterDebounced = debounce((filterValue, filterKey, nestedKey) => {\r\n    if (nestedKey) {\r\n      nestedFilter(filterValue, filterKey, nestedKey);\r\n    } else {\r\n      filter(filterValue, filterKey);\r\n    }\r\n  }, 500);\r\n\r\n  const filter = (filterValue, filterKey) => {\r\n    const filtered = data_to_filter.filter((r) => r[filterKey].toLowerCase().includes(filterValue.toLowerCase()));\r\n    setFilteredData(filtered);\r\n    return filtered;\r\n  };\r\n\r\n  const nestedFilter = (filterValue, filterKey, nestedKey) => {\r\n    console.log('nestedKLey', nestedKey);\r\n    const filtered = data_to_filter[nestedKey].filter((r) => r[filterKey].toLowerCase().includes(filterValue.toLowerCase()));\r\n    setFilteredData({ ...filteredData, [nestedKey]: filtered });\r\n  };\r\n\r\n  return {\r\n    filter,\r\n    filteredData,\r\n    setFilteredData,\r\n    onFilterDebounced,\r\n  };\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport GroupSearch from '../../GroupSearch';\r\nimport { fetchProductPriceList } from '../../../api/products';\r\nimport PriceListTable from '../../PriceListTable';\r\nimport { useReportFilter } from '../../../hooks/useReportFilter';\r\n\r\nconst GroupStock = () => {\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const { filteredData, setFilteredData, onFilterDebounced } = useReportFilter(data);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup) {\r\n      const fetch_stock_by_group = async () => {\r\n        const data = await fetchProductPriceList(selectedGroup.groupId);\r\n        setFilteredData([]);\r\n        inputRef.current.value = '';\r\n        setData([...data]);\r\n      };\r\n\r\n      fetch_stock_by_group();\r\n    } else if (!selectedGroup) {\r\n      setData([]);\r\n    }\r\n  }, [selectedGroup]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Lista de precio por categoría</h2>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', gap: '40%' }}>\r\n          <GroupSearch onSelect={setSelectedGroup} />\r\n\r\n          <input\r\n            ref={inputRef}\r\n            className='input-filter'\r\n            placeholder='Buscar...'\r\n            type='search'\r\n            onChange={(event) => {\r\n              onFilterDebounced(event.target.value, 'product');\r\n            }}\r\n          />\r\n        </div>\r\n        <PriceListTable data={filteredData.length > 0 ? filteredData : data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupStock;\r\n","const columns = [\r\n  {\r\n    Header: 'Cliente',\r\n    accessor: 'client',\r\n  },\r\n  {\r\n    Header: 'Cantidad',\r\n    accessor: 'quantity_total',\r\n  },\r\n  {\r\n    Header: 'Total',\r\n    accessor: 'total_USD',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : '';\r\n    },\r\n  },\r\n  {\r\n    Header: 'Utilidad',\r\n    accessor: 'utilidad',\r\n    Cell: ({ value }) => {\r\n      return value ? '$' + value.toLocaleString() : 0;\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import { useMemo } from 'react';\r\nimport Table from '../../Table';\r\nimport columns from './columns';\r\n\r\nconst ClientPerProductTable = ({ data }) => {\r\n  const memoizedColumns = useMemo(() => columns);\r\n\r\n  return <Table data={data} columns={memoizedColumns} />;\r\n};\r\n\r\nexport default ClientPerProductTable;\r\n","import { useState, useEffect } from 'react';\r\nimport ProductSearch from '../../ProductSearch';\r\nimport ClientPerProductTable from '../Table';\r\nimport { fetchBestClients } from '../../../api/products';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst ClientPerProductCard = ({ dateRange }) => {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct && dateRange) {\r\n      const fetch_best_clients = async () => {\r\n        const report_data = await fetchBestClients(selectedProduct.IdProducto, dateRange);\r\n        setData(report_data);\r\n      };\r\n\r\n      fetch_best_clients();\r\n    } else if (!selectedProduct) {\r\n      setData([]);\r\n    }\r\n  }, [selectedProduct, dateRange]);\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <h2>Mejor cliente por producto</h2>\r\n        <div style={{ flexDirection: 'row', gap: '5px' }}>\r\n          <label>Desde: </label>\r\n          <strong>{DateTime.fromISO(dateRange.from).toLocaleString()} </strong>\r\n          <label>Hasta: </label>\r\n          <strong>{DateTime.fromISO(dateRange.to).toLocaleString()} </strong>\r\n        </div>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div style={{ display: 'flex', flex: '1', justifyContent: 'space-between' }}>\r\n          <div style={{ width: '100%' }}>\r\n            <ProductSearch onSelect={setSelectedProduct} />\r\n          </div>\r\n        </div>\r\n        {data.length > 0 && <ClientPerProductTable data={data} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPerProductCard;\r\n","import { useState, useEffect } from 'react';\n\nimport { DateTime } from 'luxon';\n\nimport { fetchInvoiceReport } from './api/invoice';\n\nimport { ResponsivePie } from '@nivo/pie';\n\nimport SaleReportCard from './components/Cards/SaleReport';\nimport ClientReportCard from './components/Cards/ClientReport';\nimport CostFluctuation from './components/Cards/CostFluctuation';\n//import ClientRegistration from './components/Cards/ClientRegistration';\nimport GroupStock from './components/Cards/GroupStock';\nimport ClientPerProductCard from './components/ClientPerProduct/Card';\n\nimport { useReportFilter } from './hooks/useReportFilter';\n\nfunction App() {\n  const [dateRange, setDateRange] = useState({\n    from: DateTime.now().toISODate(),\n    to: DateTime.now().toISODate(),\n  });\n  const [reportDetails, setReportDetails] = useState({\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    new_clients_report: [],\n  });\n  const [chartData, setChartData] = useState({\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    buy_price_fluctuation: [],\n    new_clients_report: [],\n  });\n\n  const { filteredData, onFilterDebounced } = useReportFilter(reportDetails, {\n    sale_report: [],\n    categories_report: [],\n    client_report: [],\n    new_clients_report: [],\n  });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    const response = await fetchInvoiceReport(dateRange);\n    setReportDetails({ ...response });\n  };\n\n  useEffect(() => {\n    const categories_report_chart_data = reportDetails.categories_report.reduce((acc, current) => {\n      return [...acc, { id: current.categoria, label: current.categoria, value: current.rawProfit, netProfit: current.netProfit }];\n    }, []);\n\n    const client_report_chart_data = reportDetails.client_report.reduce((acc, current) => {\n      return [...acc, { id: current.client, label: current.client, value: current.total_USD }];\n    }, []);\n\n    setChartData({ ...chartData, categories_report: categories_report_chart_data, client_report: client_report_chart_data });\n  }, [reportDetails]);\n\n  return (\n    <div className='App'>\n      <div id='date-range-wrapper'>\n        <div id='date-range-container'>\n          <label>Desde:</label>\n          <input type='date' value={dateRange.from} onChange={(event) => setDateRange({ ...dateRange, from: event.target.value })} />\n          <label>Hasta:</label>\n          <input type='date' value={dateRange.to} onChange={(event) => setDateRange({ ...dateRange, to: event.target.value })} />\n          <input type='submit' onClick={onSubmit} />\n        </div>\n      </div>\n      <main id='main'>\n        <div id='left-content'>\n          <SaleReportCard\n            data={filteredData.sale_report.length ? filteredData.sale_report : reportDetails.sale_report}\n            onFilter={onFilterDebounced}\n          />\n          <ClientReportCard\n            data={filteredData.client_report.length ? filteredData.client_report : reportDetails.client_report}\n            onFilter={(filterValue, filterKey) => onFilterDebounced(filterValue, filterKey)}\n          />\n          <CostFluctuation />\n          {/*\n          <ClientRegistration\n            data={filteredData.new_clients_report.length ? filteredData.new_clients_report : reportDetails.new_clients_report}\n            onFilter={onFilterDebounced}\n          />\n          */}\n        </div>\n        <div id='right-content'>\n          <ClientPerProductCard dateRange={dateRange} />\n          <GroupStock />\n          <div className='card'>\n            <div className='card-header'>\n              <h2>Gráfico de categorías</h2>\n            </div>\n            <div className='card-body'>\n              {chartData.categories_report.length > 0 && (\n                <ResponsivePie\n                  data={chartData.categories_report}\n                  margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\n                  innerRadius={0.5}\n                  padAngle={0.7}\n                  cornerRadius={3}\n                  activeOuterRadiusOffset={8}\n                  arcLabel={function (e) {\n                    return `${e.value} (${e.data.netProfit})`;\n                  }}\n                  borderWidth={1}\n                  borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                  arcLinkLabelsSkipAngle={10}\n                  arcLinkLabelsTextColor='#333333'\n                  arcLinkLabelsThickness={2}\n                  arcLinkLabelsColor={{ from: 'color' }}\n                  arcLabelsSkipAngle={10}\n                  arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                  tooltip={({ datum }) => {\n                    return (\n                      <div className='tooltip-container'>\n                        <span className='small-square' style={{ background: datum.color }}></span>\n                        <strong>{datum.label}</strong>\n                        <label>Bruto: </label>\n                        <span>${Number(datum.value).toLocaleString()}</span>\n                        <label>Utilidad: </label>\n                        <span>${Number(datum.data.netProfit).toLocaleString()}</span>\n                      </div>\n                    );\n                  }}\n                />\n              )}\n            </div>\n          </div>\n          <div className='card'>\n            <div className='card-header'>\n              <h2>Gráfico de clientes</h2>\n            </div>\n            <div className='card-body'>\n              {chartData.client_report.length > 0 && (\n                <ResponsivePie\n                  data={chartData.client_report}\n                  margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\n                  innerRadius={0.5}\n                  padAngle={0.7}\n                  cornerRadius={3}\n                  activeOuterRadiusOffset={8}\n                  borderWidth={1}\n                  borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                  arcLinkLabelsSkipAngle={10}\n                  arcLinkLabelsTextColor='#333333'\n                  arcLinkLabelsThickness={2}\n                  arcLinkLabelsColor={{ from: 'color' }}\n                  arcLabelsSkipAngle={10}\n                  arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}